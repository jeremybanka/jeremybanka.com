# psuedokern
sub @fr @m' @fl by @w;
sub @m' @fl by @r;
sub @fr @m' by @l;

# diamond
sub less' @grgr by less.lsgr;
sub @lsls greater' by greater.lsgr;
#square
sub bracketleft' bracketright by bracketleft.blbr;
sub bracketleft.blbr bracketright' by bracketright.blbr;
#circle
sub parenleft' parenright by parenleft.plpr;
sub parenleft.plpr parenright' by parenright.plpr;
#triangles
sub less' @brbr by less.lsbr;
sub @brbr greater' by greater.brgr;

# html comment
sub less' exclam hyphen by less.inls;
sub less.inls exclam' hyphen by exclam.lshy;
# html box
sub less slash' greater by slash.lsgr;
sub less slash' by slash.utls;
sub slash' greater by slash.ingr;

# less
sub @lsls less' @lsls by less.mdls;
sub @eqeq less' @lsls by less.eqls;
sub @lsls less' @eqeq by less.lseq;
sub @hyhy less' @lsls by less.hyls;
sub @lsls less' @hyhy by less.lshy;
sub less' @lsls by less.inls;
sub @lsls less' by less.utls;

# greater
sub @grgr greater' @grgr by greater.mdgr;
sub @eqeq greater' @grgr by greater.eqgr;
sub @grgr greater' @eqeq by greater.greq;
sub @hyhy greater' @grgr by greater.hygr;
sub @grgr greater' @hyhy by greater.grhy;
sub greater' @grgr by greater.ingr;
sub @grgr greater' by greater.utgr;

# middle tilde
sub @tltl asciitilde' @tltl by asciitilde.mdtl;
# middle hyphen
sub @hyal hyphen' @hyal by hyphen.mdhy;
# middle equal
sub @eqal equal' @eqal by equal.mdeq;
sub @eqeq colon' @eqeq by colon.mdeq;
sub @eqeq exclam' @eqeq by exclam.mdeq;
sub @eqeq slash' @eqeq by slash.mdeq;

# js threquel (placement BETWEEN the middle-equal and initial-equal triggers yields triples in mass)
sub [equal.intq exclam.intq] equal' by equal.mdtq;
sub equal.mdtq equal' by equal.uttq;
sub equal' equal equal by equal.intq;
sub exclam' equal equal by exclam.intq;

# initial tilde
sub asciitilde' @tltl by asciitilde.intl;
# initial hyphen
sub hyphen' @hyal by hyphen.inhy;
sub asciitilde' @hyhy by asciitilde.inhy;
sub bar' @hyhy by bar.inhy;
sub braceleft' @hyhy by braceleft.inhy;
sub greater' @hyhy by greater.inhy;
sub less' @hyhy by less.inhy;
# initial equal
sub equal' @eqal by equal.ineq;
sub exclam' @eqeq by exclam.ineq;
sub less' @eqeq by less.ineq;
sub greater' @eqeq by greater.ineq;
sub question' @eqeq by question.ineq;
sub numbersign' @eqeq by numbersign.ineq;
sub slash' @eqeq by slash.ineq;
sub bar' @eqeq by bar.ineq;
sub brokenbar' @eqeq by brokenbar.ineq;
sub asciicircum' @eqeq by asciicircum.ineq;
sub asciitilde' @eqeq by asciitilde.ineq;

# out hyphen
sub [asciitilde.intl asciitilde.mdtl] asciitilde' by asciitilde.uttl;
# out hyphen
sub @inhy hyphen' by hyphen.uthy;
sub @inhy bar' by bar.uthy;
sub @inhy braceright' by braceright.uthy;
sub @inhy greater' by greater.uthy;
sub @inhy less' by less.uthy;
# out equal
sub @ineq equal' by equal.uteq;
sub @ineq less' by less.uteq;
sub @ineq greater' by greater.uteq;
sub @ineq bar' by bar.uteq;
sub @ineq brokenbar' by brokenbar.uteq;
sub @ineq asciitilde' by asciitilde.uteq;

# float colon
sub @logi colon' by colon.case;
sub colon' @logi by colon.case;